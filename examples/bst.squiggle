 let (
    node = ~( x, l, r | {
        "type": "node",
        "data": x,
        "left": l,
        "right": r
    }),
    x = """
        multi-line
        string
    """,
    tip = {"type": "tip"},
    leaf = ~( x | node(x, tip, tip) ),
    bst_add = ~( data, n |
        if n = tip
        then leaf(data)
        else if data < n.data
        then node(n.data, bst_add(data, n.left), n.right)
        else node(n.data, n.left, bst_add(data, n.right))
    ),
    in_order = ~( n |
        if n = tip
        then []
        else let (
            ls = in_order(n.left),
            rs = in_order(n.right),
            ds = [n.data]
        ) in ls ++ ds ++ rs
    ),
    bst_add2 = flip(bst_add),
    root = fold_left(bst_add2, tip, [4, 2, 1, 3, 6, 5, 7]),
    add = ~( x, y | x + y ),
    mul = ~( x, y | x * y )
) in console.log(in_order(root))
